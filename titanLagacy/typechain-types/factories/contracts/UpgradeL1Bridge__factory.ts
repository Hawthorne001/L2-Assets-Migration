/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UpgradeL1Bridge,
  UpgradeL1BridgeInterface,
} from "../../contracts/UpgradeL1Bridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20DepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20WithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHDepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHWithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
    ],
    name: "ForceWithdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "active",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20To",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETHTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeERC20Withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeETHWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "forceActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "position",
            type: "address",
          },
          {
            internalType: "bool",
            name: "state",
            type: "bool",
          },
        ],
        internalType: "struct UpgradeL1Bridge.ForceRegistryParam[]",
        name: "_data",
        type: "tuple[]",
      },
    ],
    name: "forceModify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_position",
        type: "address[]",
      },
    ],
    name: "forceRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_call",
        type: "address",
      },
      {
        internalType: "string",
        name: "_hash",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "forceWithdrawClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "call",
            type: "address",
          },
          {
            internalType: "string",
            name: "hashed",
            type: "string",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct UpgradeL1Bridge.ForceClaimParam[]",
        name: "params",
        type: "tuple[]",
      },
    ],
    name: "forceWithdrawClaimAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "gb",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_key",
        type: "string",
      },
    ],
    name: "getForcePosition",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2TokenBridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l2TokenBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "position",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052341561000f57600080fd5b600080546001600160a01b03191690556003805460ff191660011790556128118061003c608039806080f3fe604060808152600436106104c6576000803560e01c6302fb0c5e8114610100576310f45479811461014657631532ec34811461017057631a4a456181146101905763323205e681146101b057633cb747bf81146102125763485cc955811461024a576358a997f6811461026e57635dac5cff811461029a5763838b252081146102b757638627ed9b81146102e557638b4c40b0811461030257638f601f66811461030b576391c49bf8811461038e576396a9a21181146103c7576399fbab8881146103e257639a2ac6d581146103fd5763a9f9e675811461041b5763b1a1a882811461043d5763b7648fb981146104595763f1fb2abc81146104a6576104c3565b341561010a578182fd5b610113366104db565b60035460ff1615156080527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060a0016080f35b3415610150578182fd5b61015936610686565b6101668183858789611dd0565b5050505050818351f35b341561017a578182fd5b6101833661074a565b610166818385878961176f565b341561019a578182fd5b6101ab6101a6366107c7565b611b45565b818351f35b34156101ba578182fd5b6101ee6101c6366107ed565b60009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b835173ffffffffffffffffffffffffffffffffffffffff82168152602081f35b0381f35b341561021c578182fd5b610225366104db565b8154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b3415610254578182fd5b61025d36610809565b6102678183610c98565b5050818351f35b3415610278578182fd5b61028136610840565b61028f81838587898b61110d565b505050505050818351f35b34156102a4578182fd5b6102ad366108c7565b6102678183611cd7565b34156102c1578182fd5b6102ca3661093c565b6102d981838587898b8d611180565b50505050505050818351f35b34156102ef578182fd5b6102f8366108c7565b6102678183611e30565b6101ab366104db565b3415610315578182fd5b61031e36610809565b6103798161034d8473ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b73ffffffffffffffffffffffffffffffffffffffff821660005280602052505060006040600020905090565b5491505083518061020e838390815260200190565b3415610398578182fd5b6103a1366104db565b600154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b34156103d1578182fd5b6101ee6103dd366109d7565b6120f8565b34156103ec578182fd5b6101ee6103f8366107ed565b610a83565b61040636610ad5565b61041281838587610f26565b50505050818351f35b3415610425578182fd5b61042e36610b44565b6102d981838587898b8d61191f565b61044636610bb6565b610451818385610eac565b505050818351f35b3415610463578182fd5b61049a61046f36610c14565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205460ff1690565b83518115158152602081f35b34156104b0578182fd5b6104b936610c34565b6102678183611fa5565b50505b50366104d6576104d4610dab565b005b600080fd5b6000600319820112156104ed57600080fd5b50565b73ffffffffffffffffffffffffffffffffffffffff811681146104ed57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81111561055957610559610512565b604052565b6020810181811067ffffffffffffffff8211171561057e5761057e610512565b60405250565b60a0810181811067ffffffffffffffff8211171561057e5761057e610512565b6040810181811067ffffffffffffffff8211171561057e5761057e610512565b601f19601f830116810181811067ffffffffffffffff821117156105ea576105ea610512565b6040525050565b600067ffffffffffffffff82111561060b5761060b610512565b50601f01601f191660200190565b6000610624836105f1565b60405161063182826105c4565b80925084815285858501111561064657600080fd5b8484602083013760006020868301015250509392505050565b600082601f83011261067057600080fd5b61067f83833560208501610619565b9392505050565b600080600080600060a0600319870112156106a057600080fd5b6004356106ac816104f0565b945060243567ffffffffffffffff8111156106c657600080fd5b6106d3878260040161065f565b9450506044356106e2816104f0565b92506064356106f0816104f0565b949693955091939260843592509050565b60008083601f84011261071357600080fd5b50813567ffffffffffffffff81111561072b57600080fd5b60208301915083602082850101111561074357600080fd5b9250929050565b600080600080600060806003198701121561076457600080fd5b600435610770816104f0565b945060243561077e816104f0565b9350604435925060643567ffffffffffffffff81111561079d57600080fd5b6107aa8782600401610701565b96989597509395939492505050565b80151581146104ed57600080fd5b60006020600319830112156107db57600080fd5b6004356107e7816107b9565b92915050565b600060206003198301121561080157600080fd5b505060043590565b60008060406003198401121561081e57600080fd5b60043561082a816104f0565b9150602435610838816104f0565b919391925050565b60008060008060008060a06003198801121561085b57600080fd5b600435610867816104f0565b9550602435610875816104f0565b9450604435935060643563ffffffff8116811461089157600080fd5b925060843567ffffffffffffffff8111156108ab57600080fd5b6108b88882600401610701565b97999698509496939592505050565b6000806020600319840112156108dc57600080fd5b60043567ffffffffffffffff808211156108f557600080fd5b84602383011261090457600080fd5b81600401358181111561091657600080fd5b8560248260051b850101111561092b57600080fd5b602483019450809350505050915091565b600080600080600080600060c06003198901121561095957600080fd5b600435610965816104f0565b9650602435610973816104f0565b9550604435610981816104f0565b9450606435935060843563ffffffff8116811461099d57600080fd5b925060a43567ffffffffffffffff8111156109b757600080fd5b6109c48982600401610701565b989a979950959794969395949392505050565b60006020600319830112156109eb57600080fd5b60043567ffffffffffffffff811115610a0357600080fd5b61067f838260040161065f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000806006548310610a5357610a53610a10565b5050600660009081527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910191565b60006006548210610a9357600080fd5b5060066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f015473ffffffffffffffffffffffffffffffffffffffff1690565b600080600080606060031986011215610aed57600080fd5b600435610af9816104f0565b935060243563ffffffff81168114610b1057600080fd5b925060443567ffffffffffffffff811115610b2a57600080fd5b610b378682600401610701565b9597949650949392505050565b600080600080600080600060c060031989011215610b6157600080fd5b600435610b6d816104f0565b9650602435610b7b816104f0565b9550604435610b89816104f0565b9450606435610b97816104f0565b9350608435925060a43567ffffffffffffffff8111156109b757600080fd5b6000806000604060031985011215610bcd57600080fd5b60043563ffffffff81168114610be257600080fd5b925060243567ffffffffffffffff811115610bfc57600080fd5b610c098582600401610701565b949690955092505050565b6000602060031983011215610c2857600080fd5b6004356107e7816104f0565b600080602060031984011215610c4957600080fd5b60043567ffffffffffffffff80821115610c6257600080fd5b846023830112610c7157600080fd5b816004013581811115610c8357600080fd5b8560248260061b850101111561092b57600080fd5b60005473ffffffffffffffffffffffffffffffffffffffff80821615610d235760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163742068617320616c7265616479206265656e20696e6974696160448201527f6c697a65642e00000000000000000000000000000000000000000000000000006064820152608481fd5b7fffffffffffffffffffffffff0000000000000000000000000000000000000000818416818416176000558185168160015416176001555050505050565b806104ed5760405162461bcd60e51b815260206004820152600f60248201527f4163636f756e74206e6f7420454f4100000000000000000000000000000000006044820152606481fd5b610db6333b15610d61565b604051610dc28161055e565b600081526040517f662a633a0000000000000000000000000000000000000000000000000000000060208201526000602482015273deaddeaddeaddeaddeaddeaddeaddeaddead000060448201523360648201523360848201523460a482015260c060c482015280610e3760e4830184610fbe565b03601f1981018252610e4981836105c4565b50610e7281610e6d60015473ffffffffffffffffffffffffffffffffffffffff1690565b612674565b5060405133337f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2383610ea5863487610fea565b0384a35050565b610eb7333b15610d61565b60ff6003541615610f0b5760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b0381fd5b610f21610f19368585610619565b82333361100b565b505050565b60ff6003541615610f765760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b610f8c610f84368686610619565b83833361100b565b50505050565b60005b83811015610fad578181015183820152602001610f95565b83811115610f8c5750506000910152565b60008151808452610fd6816020860160208601610f92565b601f01601f19169290920160200192915050565b8181526040602082015260006110036040830185610fbe565b949350505050565b6040517f662a633a0000000000000000000000000000000000000000000000000000000060208201526000602482015273deaddeaddeaddeaddeaddeaddeaddeaddead0000604482015273ffffffffffffffffffffffffffffffffffffffff8281166064830152831660848201523460a482015260c060c48201528061109460e4820187610fbe565b03601f19810182526110a681836105c4565b506110d081856110cb60015473ffffffffffffffffffffffffffffffffffffffff1690565b61271f565b5060405182827f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2383611103893487610fea565b0384a35050505050565b611118333b15610d61565b60ff60035416156111685760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b61117886868686333388886112f8565b505050505050565b60ff60035416156111d05760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e646172644272696467650000000000000000006044820152606481fd5b6111e087878787873388886112f8565b50505050505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff80841683528085166020840152808616604084015280871660608401525086608083015260c060a083015261126460c083018a8a6111e9565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156112b3576112b3611271565b500190565b73ffffffffffffffffffffffffffffffffffffffff821681528260208201526060604082015260006112ee6060830187876111e9565b9695505050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff80851660248301523060448301528660648301526064825261135782610584565b61136382828516611486565b50506040517f662a633a000000000000000000000000000000000000000000000000000000006020820152806113a28a8a898989898960248a01611214565b03601f19810182526113b481836105c4565b506113d981886110cb60015473ffffffffffffffffffffffffffffffffffffffff1690565b506114138561140d8461034d8573ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b546112a0565b6114428361034d8473ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b556040518383837f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d0396846114788e8e8d8d8a6112b8565b0385a4505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff81166040516114a9816105a4565b60208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648183015260008086518388016000875af16114f3836114ec611593565b83876115d0565b9350508251915081158061152257818484860103121561151257600080fd5b8184015161151f816107b9565b90505b8061117857604051935062461bcd60e51b8452816004850152602a60248501527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448501527f6f742073756363656564000000000000000000000000000000000000000000006064850152608484fd5b60003d80156115c8573d6115a6816105f1565b6040516115b382826105c4565b8281528094503d6000602083013e5050505090565b606091505090565b606082801561163357845161162a57823b61162a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606481fd5b84915050611003565b84511580159061164557855186602001fd5b60405162461bcd60e51b81526020600482015280610f07602483018a610fbe565b806104ed5760405162461bcd60e51b815260206004820152602e60248201527f4f564d5f58434841494e3a206d657373656e67657220636f6e7472616374207560448201527f6e61757468656e746963617465640000000000000000000000000000000000006064820152608481fd5b6000602082840312156116e857600080fd5b815161067f816104f0565b6040513d6000823e3d81fd5b806104ed5760405162461bcd60e51b815260206004820152603060248201527f4f564d5f58434841494e3a2077726f6e672073656e646572206f662063726f7360448201527f732d646f6d61696e206d657373616765000000000000000000000000000000006064820152608481fd5b73ffffffffffffffffffffffffffffffffffffffff806001541660008281541661179a813314611666565b803b6117a4578182fd5b604080517f6e296e45000000000000000000000000000000000000000000000000000000008152602081600483865afa9250826117e3576117e36116f3565b838315611803576117f43d836105c4565b6118003d8301836116d6565b90505b61181086888316146116ff565b50508051945061181f8561055e565b8285526020850193508236853782838651868b8b5af1945061183f611593565b50846118b1578051935062461bcd60e51b845260206004850152603460248501527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448501527f20455448207472616e73666572206661696c65640000000000000000000000006064850152608484fd5b8051945087855280602086015286867f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e631876118ef858a018f8f6111e9565b0388a350505050505050505050565b600060405161190c8161055e565b6000815280915060003660208301375090565b73ffffffffffffffffffffffffffffffffffffffff806001541660008281541661194a813314611666565b803b611954578182fd5b6040517f6e296e45000000000000000000000000000000000000000000000000000000008152602081600483855afa915081611992576119926116f3565b8282156119b2576119a33d836105c4565b6119af3d8301836116d6565b90505b6119bf85878316146116ff565b50505060ff6003541615611a145760405162461bcd60e51b815260206004820152601760248201527f506175736564204c315374616e6461726442726964676500000000000000000060448201529150606482fd5b91831680835260026020908152604080852073ffffffffffffffffffffffffffffffffffffffff881660009081529252902090929054915087821015611a5c57611a5c611271565b8281526002602090815260409182902073ffffffffffffffffffffffffffffffffffffffff87166000908152915220908790039055611a9c868683611adf565b506040518383837f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b384611ad28d8d8d8d8a6112b8565b0385a45050505050505050565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff83166024820152604480820185905281526064611b3a81836105c4565b50610f8c8183611486565b7370997970c51812dc3a010c7d01b50e0d17dc79c83314611ba55760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c7920436c6f7365720000000000000000000000000000000000000000006044820152606481fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006003541660ff8215151681176003555050565b6000828410611bea57611bea610a10565b8360051b8201357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112611c2157600080fd5b919091019392505050565b600081356107e7816104f0565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611c6e57600080fd5b83018035915067ffffffffffffffff821115611c8957600080fd5b60200191503681900382131561074357600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cd057611cd0611271565b5060010190565b333b15611d235760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f410000000000000000000000000000000000000000000000006044820152606481fd5b6000806001805b81156111785780611d4157858310611d4157611178565b5082611d56611d51848888611bd9565b611c2c565b611d61848888611bd9565b611d6e6020820182611c39565b9150611d866040611d80888c8c611bd9565b01611c2c565b611d966060611d80898d8d611bd9565b611dbb6080611da68a8e8e611bd9565b01358284611db5368989610619565b89612248565b5050505050611dc983611c9e565b9250611d2a565b333b15611e1c5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f410000000000000000000000000000000000000000000000006044820152606481fd5b611e298585858585612248565b5050505050565b7370997970c51812dc3a010c7d01b50e0d17dc79c83314611e905760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c7920436c6f7365720000000000000000000000000000000000000000006044820152606481fd5b60006001805b8115611e295780611ead57848310611ead57611e29565b506000611ebb838686611f85565b35611ec5816104f0565b73ffffffffffffffffffffffffffffffffffffffff908116825260056020526040822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168417815590611f1c858888611f85565b359150611f28826104f0565b60068054680100000000000000008110611f4457611f44610512565b8581018255611f5281610a3f565b9250905080548260031b925083831b80858716851b1681198316178355505050505050611f7e83611c9e565b9250611e96565b6000828410611f9657611f96610a10565b8360051b820190509392505050565b7370997970c51812dc3a010c7d01b50e0d17dc79c833146120055760405162461bcd60e51b815260206004820152600b60248201527f4f6e6c7920436c6f7365720000000000000000000000000000000000000000006044820152606481fd5b6000805b83811015610f8c5760208061201f8387876120a3565b013561202a816107b9565b6120358387876120a3565b3561203f816104f0565b73ffffffffffffffffffffffffffffffffffffffff168452600590915260408320805491151560ff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009290921691909117905561209c81611c9e565b9050612009565b60008284106120b4576120b4610a10565b8360061b820190509392505050565b600081516120d5818560208601610f92565b9290920192915050565b6000602082840312156120f157600080fd5b5051919050565b60006040805160208082018261216661213d612137847f5f00000000000000000000000000000000000000000000000000000000000000815260010190565b896120c3565b7f2829000000000000000000000000000000000000000000000000000000000000815260020190565b03601f198101845261217881856105c4565b5060006006545b8082101561223a5761219082610a3f565b6121b681835460039190911b1c73ffffffffffffffffffffffffffffffffffffffff1690565b9150508651865185206121c882610541565b88519150868201818152600483526121df836105a4565b600080845183875afa925050506121f4611593565b81156122265761220b8782518301018883016120df565b6122175750505061222a565b50909998505050505050505050565b5050505b61223382611c9e565b915061217f565b506000979650505050505050565b6122846122806122798373ffffffffffffffffffffffffffffffffffffffff16600090815260056020526040902090565b5460ff1690565b1590565b156122f45760405162461bcd60e51b815260206004820152602a60248201527f466f7263655769746864726177436c61696d3a206e6f7420757365205f63616c60448201527f6c207661726961626c65000000000000000000000000000000000000000000006064820152608481fd5b6040805160208082018261233161213d612137847f5f00000000000000000000000000000000000000000000000000000000000000815260010190565b03601f19808201855261234482866105c4565b85519451832094915061235682610541565b8551925083830191508482526004835261236f836105a4565b6000808451848a5afa9450612382611593565b9415949250846123925782511594505b84156123de57855162461bcd60e51b815260206004820152601f60248201527f466f7263655769746864726177436c61696d3a2063616c6c206661696c65640060448201529150606482fd5b855160608a811b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000908116878401908152918d901b166014820152602881018d90529095509150846048830103818101865261243a81876105c4565b5050835181209350506124548282518301018383016120df565b9283149290508215806124ae5773ffffffffffffffffffffffffffffffffffffffff6124a861248e84600090815260046020526040902090565b5473ffffffffffffffffffffffffffffffffffffffff1690565b16151590505b8015612502578451935062461bcd60e51b8452836124fe600486016020808252818101527f466f7263655769746864726177436c61696d3a20696e76616c69642068617368604082015260600190565b0384fd5b5061255e8861251c83600090815260046020526040902090565b73ffffffffffffffffffffffffffffffffffffffff82167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781555050565b73ffffffffffffffffffffffffffffffffffffffff8716925082158015612613576125876118fe565b60008082518684018e335af1905061259d611593565b508061260d57855162461bcd60e51b815260206004820152602760248201527f466f7263655769746864726177436c61696d3a20455448207472616e7366657260448201527f206661696c6564000000000000000000000000000000000000000000000000006064820152608481fd5b5061261e565b61261e8a3386611adf565b50925173ffffffffffffffffffffffffffffffffffffffff87168152602081018990529233817f9570d360679f48443322a65d5cabe1ef5a81d7624db792a20c7a6f3eb5de36f5604087a3505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff600081815416803b612699578182fd5b6040517f3dbb202b0000000000000000000000000000000000000000000000000000000081528385166004820152606060248201526126db6064820187610fbe565b935062030d40604482015282818286038386865af19350836126ff576126ff6116f3565b83156111785761270f3d826105c4565b82813d8301031215611178578283fd5b73ffffffffffffffffffffffffffffffffffffffff600081815416803b612744578182fd5b6040517f3dbb202b0000000000000000000000000000000000000000000000000000000081528385166004820152606060248201526127866064820188610fbe565b935063ffffffff8616604482015282818286038386865af19350836127ad576127ad6116f3565b83156111e0576127bd3d826105c4565b82813d83010312156111e0578283fdfea3646970667358221220e7f934c146c91de3e1043dcdfe4f60d8c0ad9e6dd9945cce6e8797b4355156ac6c6578706572696d656e74616cf564736f6c63430008090041";

type UpgradeL1BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeL1BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeL1Bridge__factory extends ContractFactory {
  constructor(...args: UpgradeL1BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradeL1Bridge> {
    return super.deploy(overrides || {}) as Promise<UpgradeL1Bridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UpgradeL1Bridge {
    return super.attach(address) as UpgradeL1Bridge;
  }
  override connect(signer: Signer): UpgradeL1Bridge__factory {
    return super.connect(signer) as UpgradeL1Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeL1BridgeInterface {
    return new utils.Interface(_abi) as UpgradeL1BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeL1Bridge {
    return new Contract(address, _abi, signerOrProvider) as UpgradeL1Bridge;
  }
}
