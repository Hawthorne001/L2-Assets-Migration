/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  L1StandardBridge,
  L1StandardBridgeInterface,
} from "../../../../../../../../sub/packages/tokamak/contracts/contracts/L1/messaging/L1StandardBridge";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20DepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20WithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHDepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHWithdrawalFinalized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20To",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETHTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeERC20Withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeETHWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2TokenBridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l2TokenBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052341561000f57600080fd5b600080546001600160a01b03191690556116e28061002f608039806080f3fe6040608081526004361061029f576000803560e01c631532ec34811461009257633cb747bf81146100bc5763485cc95581146100f8576358a997f6811461011c5763838b2520811461014857638b4c40b0811461017657638f601f668114610184576391c49bf8811461020757639a2ac6d581146102405763a9f9e675811461025e5763b1a1a88281146102805761029c565b341561009c578182fd5b6100a536610322565b6100b281838587896111cb565b5050505050818351f35b34156100c6578182fd5b6100cf36610391565b8154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b0381f35b3415610102578182fd5b61010b366103a3565b610115818361063b565b5050818351f35b3415610126578182fd5b61012f366103da565b61013d81838587898b610b65565b505050505050818351f35b3415610152578182fd5b61015b36610461565b61016a81838587898b8d610b88565b50505050505050818351f35b61017f36610391565b818351f35b341561018e578182fd5b610197366103a3565b6101f2816101c68473ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b73ffffffffffffffffffffffffffffffffffffffff821660005280602052505060006040600020905090565b549150508351806100f4838390815260200190565b3415610211578182fd5b61021a36610391565b600154835173ffffffffffffffffffffffffffffffffffffffff90911680825290602081f35b610249366104fc565b610255818385876109d9565b50505050818351f35b3415610268578182fd5b6102713661056b565b61016a81838587898b8d611374565b610289366105dd565b61029481838561096d565b505050818351f35b50505b50366102af576102ad610782565b005b600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146102d657600080fd5b50565b60008083601f8401126102eb57600080fd5b50813567ffffffffffffffff81111561030357600080fd5b60208301915083602082850101111561031b57600080fd5b9250929050565b600080600080600060806003198701121561033c57600080fd5b600435610348816102b4565b9450602435610356816102b4565b9350604435925060643567ffffffffffffffff81111561037557600080fd5b61038287826004016102d9565b96989597509395939492505050565b6000600319820112156102d657600080fd5b6000806040600319840112156103b857600080fd5b6004356103c4816102b4565b91506024356103d2816102b4565b919391925050565b60008060008060008060a0600319880112156103f557600080fd5b600435610401816102b4565b955060243561040f816102b4565b9450604435935060643563ffffffff8116811461042b57600080fd5b925060843567ffffffffffffffff81111561044557600080fd5b61045288826004016102d9565b97999698509496939592505050565b600080600080600080600060c06003198901121561047e57600080fd5b60043561048a816102b4565b9650602435610498816102b4565b95506044356104a6816102b4565b9450606435935060843563ffffffff811681146104c257600080fd5b925060a43567ffffffffffffffff8111156104dc57600080fd5b6104e989826004016102d9565b989a979950959794969395949392505050565b60008060008060606003198601121561051457600080fd5b600435610520816102b4565b935060243563ffffffff8116811461053757600080fd5b925060443567ffffffffffffffff81111561055157600080fd5b61055e86826004016102d9565b9597949650949392505050565b600080600080600080600060c06003198901121561058857600080fd5b600435610594816102b4565b96506024356105a2816102b4565b95506044356105b0816102b4565b94506064356105be816102b4565b9350608435925060a43567ffffffffffffffff8111156104dc57600080fd5b60008060006040600319850112156105f457600080fd5b60043563ffffffff8116811461060957600080fd5b925060243567ffffffffffffffff81111561062357600080fd5b61063085826004016102d9565b949690955092505050565b60005473ffffffffffffffffffffffffffffffffffffffff808216156106e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f436f6e74726163742068617320616c7265616479206265656e20696e6974696160448201527f6c697a65642e00000000000000000000000000000000000000000000000000006064820152608481fd5b7fffffffffffffffffffffffff0000000000000000000000000000000000000000818416818416176000558185168160015416176001555050505050565b806102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4163636f756e74206e6f7420454f4100000000000000000000000000000000006044820152606481fd5b61078d333b1561071e565b604051610799816108b2565b600081526040517f662a633a0000000000000000000000000000000000000000000000000000000060208201526000602482015273deaddeaddeaddeaddeaddeaddeaddeaddead000060448201523360648201523360848201523460a482015260c060c48201528061080e60e48301846109f5565b03601f19810182526108208183610918565b506108498161084460015473ffffffffffffffffffffffffffffffffffffffff1690565b611545565b5060405133337f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f238361087c863487610a42565b0384a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810181811067ffffffffffffffff821117156108d2576108d2610883565b60405250565b60a0810181811067ffffffffffffffff821117156108d2576108d2610883565b6040810181811067ffffffffffffffff821117156108d2576108d2610883565b601f19601f830116810181811067ffffffffffffffff8211171561093e5761093e610883565b6040525050565b600067ffffffffffffffff82111561095f5761095f610883565b50601f01601f191660200190565b610978333b1561071e565b61098e610986368585610993565b823333610a63565b505050565b600061099e83610945565b6040516109ab8282610918565b8092508481528585850111156109c057600080fd5b8484602083013760006020868301015250509392505050565b6109ef6109e7368686610993565b838333610a63565b50505050565b6000815180845260005b81811015610a1b576020818501810151868301820152016109ff565b81811115610a2d576000602083870101525b50601f01601f19169290920160200192915050565b818152604060208201526000610a5b60408301856109f5565b949350505050565b6040517f662a633a0000000000000000000000000000000000000000000000000000000060208201526000602482015273deaddeaddeaddeaddeaddeaddeaddeaddead0000604482015273ffffffffffffffffffffffffffffffffffffffff8281166064830152831660848201523460a482015260c060c482015280610aec60e48201876109f5565b03601f1981018252610afe8183610918565b50610b288185610b2360015473ffffffffffffffffffffffffffffffffffffffff1690565b6115f0565b5060405182827f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2383610b5b893487610a42565b0384a35050505050565b610b70333b1561071e565b610b808686868633338888610cb0565b505050505050565b610b988787878787338888610cb0565b50505050505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff80841683528085166020840152808616604084015280871660608401525086608083015260c060a0830152610c1c60c083018a8a610ba1565b9998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115610c6b57610c6b610c29565b500190565b73ffffffffffffffffffffffffffffffffffffffff82168152826020820152606060408201526000610ca6606083018787610ba1565b9695505050505050565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000602082015273ffffffffffffffffffffffffffffffffffffffff808516602483015230604483015286606483015260648252610d0f826108d8565b610d1b82828516610ef1565b50506040517f662a633a00000000000000000000000000000000000000000000000000000000602082015280610d5a8a8a898989898960248a01610bcc565b03601f1981018252610d6c8183610918565b50610d918188610b2360015473ffffffffffffffffffffffffffffffffffffffff1690565b50610dcb85610dc5846101c68573ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b54610c58565b610dfa836101c68473ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902090565b556040518383837f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d039684610e308e8e8d8d8a610c70565b0385a4505050505050505050565b600060208284031215610e5057600080fd5b81518015158114610e6057600080fd5b9392505050565b806102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608481fd5b73ffffffffffffffffffffffffffffffffffffffff8116604051610f14816108f8565b60208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481830152823b610fa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152816004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606481fd5b60008086518388016000875af19250610fc382610fbd610fee565b8561102b565b9250825191508115610fe757610fe7610fe28284860101838601610e3e565b610e67565b5050505050565b60003d8015611023573d61100181610945565b60405161100e8282610918565b8281528094503d6000602083013e5050505090565b606091505090565b606081801561103d5783915050610e60565b83511580159061104f57845185602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201528061108a60248301896109f5565b0381fd5b806102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4f564d5f58434841494e3a206d657373656e67657220636f6e7472616374207560448201527f6e61757468656e746963617465640000000000000000000000000000000000006064820152608481fd5b60006020828403121561112a57600080fd5b8151610e60816102b4565b6040513d6000823e3d81fd5b806102d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4f564d5f58434841494e3a2077726f6e672073656e646572206f662063726f7360448201527f732d646f6d61696e206d657373616765000000000000000000000000000000006064820152608481fd5b73ffffffffffffffffffffffffffffffffffffffff80600154166000828154166111f681331461108e565b803b611200578182fd5b604080517f6e296e45000000000000000000000000000000000000000000000000000000008152602081600483865afa92508261123f5761123f611135565b83831561125f576112503d83610918565b61125c3d830183611118565b90505b61126c8688831614611141565b50508051945061127b856108b2565b8285526020850193508236853782838651868b8b5af1945061129b610fee565b508461132757805193507f08c379a000000000000000000000000000000000000000000000000000000000845260206004850152603460248501527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448501527f20455448207472616e73666572206661696c65640000000000000000000000006064850152608484fd5b8051945087855280602086015286867f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e63187611365858a018f8f610ba1565b0388a350505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff806001541660008281541661139f81331461108e565b803b6113a9578182fd5b604080517f6e296e45000000000000000000000000000000000000000000000000000000008152602081600483865afa9250826113e8576113e8611135565b838315611408576113f93d83610918565b6114053d830183611118565b90505b6114158688831614611141565b50508585168084526002602090815282852073ffffffffffffffffffffffffffffffffffffffff8a1660009081529152604090209094505491508982101561145f5761145f610c29565b8383526002602090815281842073ffffffffffffffffffffffffffffffffffffffff891660009081529152604090208a83039055805192507fa9059cbb00000000000000000000000000000000000000000000000000000000602084015284891660248401528960448401526044835260808301945082851067ffffffffffffffff861117156114f1576114f1610883565b8481526114fe8385610ef1565b80519450505050508383837f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b3846115388d8d8d8d8a610c70565b0385a45050505050505050565b73ffffffffffffffffffffffffffffffffffffffff600081815416803b61156a578182fd5b6040517f3dbb202b0000000000000000000000000000000000000000000000000000000081528385166004820152606060248201526115ac60648201876109f5565b935062030d40604482015282818286038386865af19350836115d0576115d0611135565b8315610b80576115e03d82610918565b82813d8301031215610b80578283fd5b73ffffffffffffffffffffffffffffffffffffffff600081815416803b611615578182fd5b6040517f3dbb202b00000000000000000000000000000000000000000000000000000000815283851660048201526060602482015261165760648201886109f5565b935063ffffffff8616604482015282818286038386865af193508361167e5761167e611135565b8315610b985761168e3d82610918565b82813d8301031215610b98578283fdfea3646970667358221220201fe3dae9d7200c666e8e49802537d851b234b853b5e7a7dfd7f1c0f5b4cfb16c6578706572696d656e74616cf564736f6c63430008090041";

type L1StandardBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1StandardBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1StandardBridge__factory extends ContractFactory {
  constructor(...args: L1StandardBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1StandardBridge> {
    return super.deploy(overrides || {}) as Promise<L1StandardBridge>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1StandardBridge {
    return super.attach(address) as L1StandardBridge;
  }
  override connect(signer: Signer): L1StandardBridge__factory {
    return super.connect(signer) as L1StandardBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1StandardBridgeInterface {
    return new utils.Interface(_abi) as L1StandardBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1StandardBridge {
    return new Contract(address, _abi, signerOrProvider) as L1StandardBridge;
  }
}
